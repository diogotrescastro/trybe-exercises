db.movies.find();

// Utilizando o operador $all , retorne todos os filmes que contenham action e adventure no array category .
db.movies.find(
  {
    category: {
      $all: ["action", "adventure"]
    }
  }
);


// Agora retorne os filmes que contenham action no array category e possuem nota do IMDB maior do que 7 
db.movies.find(
  {
    category: {
      $all: ["action"]
    },
    imdbRating: { $gt: 7 }
  }
);

// Adicione um array chamado ratings ao filme Batman com os seguintes valores: [85, 100, 102, 105] . Dica: lembre-se do operador $each visto no dia anterior.
db.movies.updateOne(
  {title: "Batman"},
  {
    $push: {
      "ratings": {
        $each: [85, 100, 102, 105]
      }
    }
  }
)
// Adicione um array chamado ratings ao filme Godzilla com os seguintes valores: [78, 52, 95, 102] .
db.movies.updateOne(
  {title: "Godzilla"},
  {
    $push: {
      "ratings": {
        $each: [78, 52, 95, 102]
      }
    }
  }
)

// Adicione um array chamado ratings ao filme Home Alone com os seguintes valores: [200, 99, 65] .
db.movies.updateOne(
  {title: "Home Alone"},
  {
    $push: {
      "ratings": {
        $each: [200, 99, 65]
      }
    }
  }
)


// Retorne todos os filmes com ratings maior do que 103 , exibindo apenas os campos title e ratings .
db.movies.find(
  {
    ratings: {
      $elemMatch: {$gt: 103}}},
      { _id: 0,
    title: 1,
    ratings: 1
    })

// Retorne todos os filmes com ratings entre 100 e 105 , exibindo apenas os campos title e ratings .
db.movies.find(
  {
    ratings: {
      $elemMatch: {$gte: 100, $lte: 105 }}},
      { _id: 0,
    title: 1,
    ratings: 1
    })

// Retorne todos os filmes com ratings entre 64 e 105 e divisíveis por 9 , exibindo apenas os campos title e ratings .
db.movies.find(
  {
    ratings: {
      $elemMatch: {$gte: 64, $lte: 105, $mod: [9, 0] }}},
      { _id: 0,
    title: 1,
    ratings: 1
    })


// Retorne os filmes da categoria adventure e com ratings maior do que 103 , exibindo apenas os campos title , ratings e category .
db.movies.find(
  {
    category: { $all: ["adventure"] },
    ratings: {
      $elemMatch: {$gt: 103}}},
      { _id: 0,
    title: 1,
    ratings: 1,
    category: 1
    })

// Retorne somente o título de todos os filmes com dois elementos no array category .
db.movies.find(
  {
    category: { $size: 2 }},
      { _id: 0,
    title: 1,
    })

// Retorne somente o título de todos os filmes com quatro elementos no array ratings .
db.movies.find(
  {
    ratings: { $size: 4 }},
      { _id: 0,
    title: 1,
    })

 // Busque os filmes em que o módulo 5 do campo budget seja 0 e que o array category tenha tamanho 2 .
 db.movies.find(
  {
    budget: { $mod: [5, 0]},
    category: { $size: 2 }
     })


// Retorne os filmes da categoria "sci-fi" ou que possua o ratings maior do que 199 , exibindo apenas os campos title , ratings e category .
db.movies.find(
  {
    $or: [
    { category: { $all: ["sci-fi"] }},
    {ratings: {
      $elemMatch: {$gt: 199}}
    }]},
      { _id: 0,
    title: 1,
    ratings: 1,
    category: 1
    })
